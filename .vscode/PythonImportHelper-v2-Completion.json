[
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "NSequence",
        "importPath": "n_sequence",
        "description": "n_sequence",
        "isExtraImport": true,
        "detail": "n_sequence",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "void",
        "importPath": "numpy",
        "description": "numpy",
        "isExtraImport": true,
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "Fibonacci",
        "kind": 6,
        "importPath": "fibonacci",
        "description": "fibonacci",
        "peekOfCode": "class Fibonacci:\n    \"\"\"\n    Provides methods to calculate and evaluate the\n    Fibonacci sequence.\n    \"\"\"\n    def fibonacci(self, _n) -> float:\n        return 0.0",
        "detail": "fibonacci",
        "documentation": {}
    },
    {
        "label": "n_seq",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "n_seq = NSequence()\nn_seq.plot_function(\"f_1\", 1, 160)\nn_seq.plot_function(\"f_2\", 1, 160)\nn_seq.plot_function(\"f_3\", 1, 160)\nn_seq.plot_function(\"f_4\", 1, 260)\n# fibonacci",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "NSequence",
        "kind": 6,
        "importPath": "n_sequence",
        "description": "n_sequence",
        "peekOfCode": "class NSequence:\n    \"\"\"\n    Provides methods to calculate sequences on a given n.\n    Also evaluates the approximation on the limit of each function.\n    \"\"\"\n    current_file = os.path.abspath(__file__)\n    current_dir = os.path.dirname(current_file)\n    out_folder = \"out/n_sequence/\"\n    f_1_string_tex = r\"$f(n) = (\\frac {2} {3})^n$\"\n    f_2_string_tex = r\"$f(n) = (\\frac {nÂ³} {2^n})$\"",
        "detail": "n_sequence",
        "documentation": {}
    }
]